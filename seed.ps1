# TappPlus - Database Seeding Script (PowerShell)
# Usage: .\seed.ps1

# Configuration
$CONTAINER_NAME = "tappplus-app"
$SEED_SCRIPT = "scripts/seed-db.js"

# Colors
function Write-ColorOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )

    $colorMap = @{
        "Red" = "Red"
        "Green" = "Green"
        "Yellow" = "Yellow"
        "Blue" = "Cyan"
        "Cyan" = "Cyan"
        "White" = "White"
    }

    Write-Host $Message -ForegroundColor $colorMap[$Color]
}

function Print-Header {
    param([string]$Title)

    Write-Host ""
    Write-ColorOutput "========================================" "Blue"
    Write-ColorOutput "  $Title" "Blue"
    Write-ColorOutput "========================================" "Blue"
    Write-Host ""
}

function Print-Success {
    param([string]$Message)
    Write-ColorOutput "‚úì $Message" "Green"
}

function Print-Warning {
    param([string]$Message)
    Write-ColorOutput "‚ö† $Message" "Yellow"
}

function Print-Error {
    param([string]$Message)
    Write-ColorOutput "‚úó $Message" "Red"
}

function Print-Info {
    param([string]$Message)
    Write-ColorOutput "‚Üí $Message" "Blue"
}

function Check-Container {
    Print-Header "V√©rification du Conteneur"

    $running = docker ps --format "{{.Names}}" | Select-String -Pattern $CONTAINER_NAME

    if (-not $running) {
        Print-Error "Le conteneur $CONTAINER_NAME n'est pas en cours d'ex√©cution"
        Write-Host ""
        Write-Host "D√©marrez le conteneur avec :"
        Write-ColorOutput "  docker compose up -d" "Cyan"
        Write-Host ""
        exit 1
    }

    Print-Success "Conteneur $CONTAINER_NAME en cours d'ex√©cution"
}

function Check-Database {
    Print-Header "V√©rification de la Base de Donn√©es"

    Print-Info "V√©rification de l'existence de la base de donn√©es..."

    $dbExists = docker exec $CONTAINER_NAME test -f /app/data/meditache.db 2>$null

    if ($LASTEXITCODE -eq 0) {
        Print-Success "Base de donn√©es trouv√©e"
    }
    else {
        Print-Warning "Base de donn√©es non trouv√©e"
        Print-Info "Initialisation de la base de donn√©es..."

        # Create database schema
        docker exec $CONTAINER_NAME npx prisma db push --schema=/app/apps/api/prisma/schema.prisma | Out-Null

        Print-Success "Base de donn√©es initialis√©e"
    }
}

function Seed-Database {
    Print-Header "Chargement des Donn√©es de Test"

    Print-Info "Ex√©cution du script de seeding..."
    Write-Host ""

    # Run the seed script
    docker exec $CONTAINER_NAME node $SEED_SCRIPT

    Write-Host ""
}

function Restart-Services {
    Print-Header "Red√©marrage des Services"

    Print-Info "Red√©marrage du worker..."
    docker exec $CONTAINER_NAME pm2 restart worker | Out-Null
    Print-Success "Worker red√©marr√©"

    Print-Info "Attente de la stabilisation (3s)..."
    Start-Sleep -Seconds 3

    Print-Info "V√©rification de l'√©tat des processus..."
    Write-Host ""
    docker exec $CONTAINER_NAME pm2 status
}

function Show-Credentials {
    Print-Header "Informations de Connexion"

    Write-ColorOutput "Acc√®s √† l'Application" "Cyan"
    Write-ColorOutput "  URL: http://localhost" "Blue"
    Write-Host ""

    Write-ColorOutput "Credentials" "Cyan"
    Write-Host ""

    Write-ColorOutput "üë®‚Äçüíº Compte Admin" "Yellow"
    Write-ColorOutput "  Email:    admin@tappplus.com" "Green"
    Write-ColorOutput "  Password: Admin123!" "Green"
    Write-Host ""

    Write-ColorOutput "üë®‚Äç‚öïÔ∏è  Compte Docteur" "Yellow"
    Write-ColorOutput "  Email:    docteur@tappplus.com" "Green"
    Write-ColorOutput "  Password: Doctor123!" "Green"
    Write-Host ""

    Write-ColorOutput "üè• Organisation" "Yellow"
    Write-ColorOutput "  Nom: Clinique M√©dicale Demo" "Green"
    Write-Host ""

    Write-ColorOutput "üë§ Patient de Test" "Yellow"
    Write-ColorOutput "  Nom: Samuel Nguema" "Green"
    Write-Host ""
}

function Show-NextSteps {
    Print-Header "Prochaines √âtapes"

    Write-Host "Vous pouvez maintenant :"
    Write-Host ""
    Write-ColorOutput "  1. Acc√©der √† l'application : http://localhost" "Blue"
    Write-Host "  2. Vous connecter avec un compte admin ou docteur"
    Write-ColorOutput "  3. Voir les logs : docker exec $CONTAINER_NAME pm2 logs" "Blue"
    Write-ColorOutput "  4. Arr√™ter l'application : docker compose down" "Blue"
    Write-Host ""
}

function Confirm-Seeding {
    Print-Header "Confirmation"

    Write-ColorOutput "‚ö† ATTENTION" "Yellow"
    Write-Host ""
    Write-Host "Cette op√©ration va :"
    Write-Host "  ‚Ä¢ Ajouter des donn√©es de d√©monstration √† la base de donn√©es"
    Write-Host "  ‚Ä¢ Cr√©er des comptes utilisateurs de test"
    Write-Host ""
    Write-ColorOutput "Les donn√©es existantes ne seront PAS supprim√©es." "Cyan"
    Write-Host ""

    $response = Read-Host "Voulez-vous continuer ? (yes/no)"
    Write-Host ""

    if ($response -ne "yes") {
        Print-Info "Op√©ration annul√©e"
        exit 0
    }
}

# Main execution
function Main {
    Clear-Host

    Print-Header "TappPlus - Seeding de la Base de Donn√©es"

    Confirm-Seeding
    Check-Container
    Check-Database
    Seed-Database
    Restart-Services
    Show-Credentials
    Show-NextSteps

    Print-Header "‚úÖ Seeding Termin√© avec Succ√®s !"
}

# Run
try {
    Main
}
catch {
    Print-Error "Erreur fatale: $_"
    Write-Host $_.Exception.Message
    exit 1
}
